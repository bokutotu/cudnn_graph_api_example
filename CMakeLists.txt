cmake_minimum_required(VERSION 3.10)
project(MyProject CUDA C CXX)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED True)
set(CMAKE_CXX_STANDARD_REQUIRED True)
find_package(CUDA REQUIRED)
find_path(CUDNN_INCLUDE_DIR cudnn.h HINTS ${CUDA_TOOLKIT_ROOT_DIR}/targets/x86_64-linux/include)
find_library(CUDNN_LIBRARY cudnn HINTS ${CUDA_TOOLKIT_ROOT_DIR}/targets/x86_64-linux/lib)
if (CUDNN_INCLUDE_DIR AND CUDNN_LIBRARY)
    message(STATUS "Found cuDNN: include path: ${CUDNN_INCLUDE_DIR}, library: ${CUDNN_LIBRARY}")
else()
    message(FATAL_ERROR "Could not find cuDNN")
endif()
include_directories(${CUDA_INCLUDE_DIRS} ${CUDNN_INCLUDE_DIR})
add_library(utils STATIC utils.c)
add_executable(graph_api_conv_2d graph_api_conv_2d.c)
target_link_libraries(graph_api_conv_2d PRIVATE utils)
target_link_libraries(graph_api_conv_2d PRIVATE ${CUDA_LIBRARIES} ${CUDNN_LIBRARY})

# graph_api_batch_norm_2d.c
include_directories(${CUDA_INCLUDE_DIRS} ${CUDNN_INCLUDE_DIR})
add_executable(graph_api_batch_norm_2d graph_api_batch_norm_2d.c)
target_link_libraries(graph_api_batch_norm_2d PRIVATE utils)
target_link_libraries(graph_api_batch_norm_2d PRIVATE ${CUDA_LIBRARIES} ${CUDNN_LIBRARY})
